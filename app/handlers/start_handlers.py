from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, CommandObject
from aiogram.fsm.context import FSMContext

from app.keyboard.start_kb import start, start_user, menu_start, back_start
from app.database.queries import push_user, get_statistic, increase_balance_and_invites, get_user
from app.filters import IsExist

from config import PHOTO

start_handler = Router()


# @start_handler.callback_query(F.data == 'check_sub')
# async def check_sub(call: CallbackQuery):
#     await call.answer()

#     await call.message.answer('–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª')



@start_handler.message(CommandStart(), ~IsExist())
async def cmd_start(message: Message, command: CommandObject, state: FSMContext):
    await state.clear()
    if not await get_user(message.from_user.id):

        inviter = int(command.args, 16) if command.args else None

        if inviter and inviter != message.from_user.id:
            await increase_balance_and_invites(inviter, 0.4)


    await message.answer(
    "<b>üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∞—Ä–±–∏—Ç—Ä–∞–∂–∞ —Ç—Ä–∞—Ñ–∏–∫–∞!</b>\n\n"
    "–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –ø–æ—Ç–æ–∫ —Ç—Ä–∞—Ñ–∏–∫–∞ –≤ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç–µ. "
    "–ú—ã —à–∞–≥ –∑–∞ —à–∞–≥–æ–º –ø—Ä–æ–≤–µ–¥–µ–º –≤–∞—Å —á–µ—Ä–µ–∑ –≤—Å–µ —ç—Ç–∞–ø—ã: "
    "<i>–æ—Ç –≤—ã–±–æ—Ä–∞ –ª—É—á—à–∏—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤ –∏ –∑–∞–ø—É—Å–∫–∞ –∫–∞–º–ø–∞–Ω–∏–π –¥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è.</i> üìä\n\n"
    "<b>‚ú® –ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç:</b>\n"
    "‚Ä¢ –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏;\n"
    "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏;\n"
    "‚Ä¢ –î–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –æ—Ñ—Ñ–µ—Ä–∞–º –∏ –±–æ–Ω—É—Å–∞–º –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤.\n\n"
    "<b>üí∏ –í—ã–ø–ª–∞—Ç—ã –∏ –±–æ–Ω—É—Å—ã:</b>\n"
    "–ö–∞–∂–¥–∞—è —É—Å–ø–µ—à–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è –ø—Ä–∏–Ω–µ—Å–µ—Ç –≤–∞–º –¥–æ—Ö–æ–¥. –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∏ "
    "—Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã. üî•\n\n"
    "<b>–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É?</b> –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∏ —Å–¥–µ–ª–∞–π—Ç–µ "
    "–ø–µ—Ä–≤—ã–µ —à–∞–≥–∏ –∫ —Å—Ç–∞–±–∏–ª—å–Ω–æ–º—É –∑–∞—Ä–∞–±–æ—Ç–∫—É!", reply_markup=start
)


@start_handler.message(CommandStart())
async def cmd_start(message: Message):    
    photo = PHOTO
    await message.answer_photo(
        photo=photo, caption="<b>üåä –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b>", reply_markup=menu_start
    )


@start_handler.callback_query(F.data == 'start_traffic')
async def start_one(call: CallbackQuery):
    await call.answer()
    await call.message.edit_text(
        "<b>–•–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?</b>\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <i>¬´–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏¬ª</i>, –∏ –±–æ—Ç —Å–æ–∑–¥–∞—Å—Ç –≤–∞—à—É —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É. "
        "–° –µ–µ –ø–æ–º–æ—â—å—é –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å —Ç—Ä–∞—Ñ–∏–∫ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–∞–∂–¥–æ–π –∫–æ–Ω–≤–µ—Ä—Å–∏–∏! üí∏\n\n"
        "–ß–µ–º –±–æ–ª—å—à–µ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ ‚Äî —Ç–µ–º –≤—ã—à–µ –≤–∞—à –¥–æ—Ö–æ–¥. –í—Å—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ, –∞ –≤—ã–ø–ª–∞—Ç—ã ‚Äî –≤ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –≤–∞—Å –≤—Ä–µ–º—è. üöÄ\n\n"
        "–ù–∞—á–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞—Ä–∞–±–æ—Ç–∫–∞!", reply_markup=start_user
    )

# @start_handler.message(F.photo)
# async def get_photo_id(message: Message):
#     # –ë–µ—Ä—ë–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ (–ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤ —Å–ø–∏—Å–∫–µ)
#     file_id = message.photo[-1].file_id

#     # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é file_id
#     await message.answer(f"ID –≤–∞—à–µ–≥–æ —Ñ–æ—Ç–æ: {file_id}")

@start_handler.callback_query(F.data == 'check_sub')
@start_handler.callback_query(F.data == 'start_work')
async def menu(call: CallbackQuery):
    await call.answer()
    
    photo = PHOTO
    await call.message.answer_photo(
        photo=photo, caption="<b>üåä –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b>", reply_markup=menu_start
    )
    

@start_handler.callback_query(F.data == 'statistic')
async def statistic_viewing(call: CallbackQuery):
    await call.answer()
    statistic_all = await get_statistic()

    await call.message.edit_caption(caption=(
        f"<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ </b>\n"
        f"<b>‚î£–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: </b> <code>{statistic_all.total_users}</code>\n"
        f"<b>‚î£–ó–∞ —Å–µ–≥–æ–¥–Ω—è: </b> <code>{statistic_all.day_users}</code>\n"
        f"<b>‚îó–í—ã–ø–ª–∞—á–µ–Ω–æ: </b> <code>{statistic_all.withdrawal}</code>"), reply_markup=back_start)


@start_handler.callback_query(F.data == 'back_starts')
@start_handler.callback_query(F.data == 'back_shop')
@start_handler.callback_query(F.data == 'back_menu')
async def menu(call: CallbackQuery):
    await call.answer()
    
    photo = PHOTO
    await call.message.edit_caption(
        photo=photo, caption="<b>üåä –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b>", reply_markup=menu_start
    )
    
